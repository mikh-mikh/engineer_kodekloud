Jenkins Deployment Job

The Nautilus development team had a meeting with the DevOps team where they discussed automating the deployment of one of their apps using Jenkins (the one in Stratos Datacenter). They want to auto deploy the new changes in case any developer pushes to the repository. As per the requirements mentioned below configure the required Jenkins job.

Click on the Jenkins button on the top bar to access the Jenkins UI. Login using username admin and Adm!n321 password.

Similarly, you can access the Gitea UI using Gitea button, username and password for Git is sarah and Sarah_pass123 respectively. Under user sarah you will find a repository named web that is already cloned on the Storage server under sarah's home. sarah is a developer who is working on this repository.

1. Install httpd (whatever version is available in the yum repo by default) and configure it to serve on port 8080 on All app servers. You can make it part of your Jenkins job or you can do this step manually on all app servers.

2. Create a Jenkins job named nautilus-app-deployment and configure it in a way so that if anyone pushes any new change to the origin repository in master branch, the job should auto build and deploy the latest code on the Storage server under /var/www/html directory. Since /var/www/html on Storage server is shared among all apps.

3. SSH into Storage Server using sarah user credentials mentioned above. Under sarah user's home you will find a cloned Git repository named web. Under this repository there is an index.html file, update its content to Welcome to the xFusionCorp Industries, then push the changes to the origin into master branch. This push must trigger your Jenkins job and the latest changes must be deployed on the servers, also make sure it deploys the entire repository content not only index.html file.

Click on the App button on the top bar to access the app, you should be able to see the latest changes you deployed. Please make sure the required content is loading on the main URL https://<LBR-URL> i.e there should not be any sub-directory like https://<LBR-URL>/web etc.

Note:
1. You might need to install some plugins and restart Jenkins service. So, we recommend clicking on Restart Jenkins when installation is complete and no jobs are running on plugin installation/update page i.e update centre. Also some times Jenkins UI gets stuck when Jenkins service restarts in the back end so in such case please make sure to refresh the UI page.

2. Make sure Jenkins job passes even on repetitive runs as validation may try to build the job multiple times.

3. Deployment related tasks should be done by sudo user on the destination server to avoid any permission issues so make sure to configure your Jenkins job accordingly.

4. For these kind of scenarios requiring changes to be done in a web UI, please take screenshots so that you can share it with us for review in case your task is marked incomplete. You may also consider using a screen recording software such as loom.com to record and share your work.

1. Install plugins:
Gitea, Build Authorization Token Root, SSH  & publish over SSH. Do not forget to restart jenkins after installing plugins (checkbox "Restart Jenkins when installation is complete and no jobs are running").

2. Create credentails for app servers users (from nautilus project wiki) and gitea (from task).

3. Create SSH remote hosts/ssh (all app servers).

4. Create Publish over SSH: name\hostname - ststrot01, username from task (sarah - she has account and permissions to her homedir and /var/www/html), Remote Directory (/var/www/html), password from task (Sarah_pass123)

5. Create a Build Job to install httpd to all app servers with any name (httpd_insall) with "Execute shell script on remote host using SSH" for app hosts with contents:

stapp01:
echo Ir0nM@n | sudo -S sudo yum install -y httpd
echo Ir0nM@n | sudo -S sed -i 's/^Listen 80$/Listen 8080/g' /etc/httpd/conf/httpd.conf
echo Ir0nM@n | sudo -S systemctl restart httpd && systemctl status httpd --no-pager
stapp02:
echo Am3ric@ | sudo -S sudo yum install -y httpd
echo Am3ric@ | sudo -S sed -i 's/^Listen 80$/Listen 8080/g' /etc/httpd/conf/httpd.conf
echo Am3ric@ | sudo -S systemctl restart httpd && systemctl status httpd --no-pager
stapp03:
echo BigGr33n | sudo -S sudo yum install -y httpd
echo BigGr33n | sudo -S sed -i 's/^Listen 80$/Listen 8080/g' /etc/httpd/conf/httpd.conf
echo BigGr33n | sudo -S systemctl restart httpd && systemctl status httpd --no-pager

build this job and check console output, check http serv from jumphost:
curl stapp01:8080
curl stapp02:8080
curl stapp03:8080

6. Create a Jenkins Build Job as per the task with name "nautilus-app-deployment"
sorce code managment "Git": Repository URL (dynamic - you need to login to gitea with sarah username and provided password to get it) "https://80-port-68467552dfc94d3b.labs.kodekloud.com/sarah/web.git" (example), gitea credentails (sarah), branch "*/master"
build triggers: 
trigger builds remotely (e.g., from scripts), 
authentication token: KODEKLOUDENGINEER
Build Environment:
transfer set source files **/*

7. build this job and check, set 777 to /var/www/html dir (sudo chmod 777 -R /var/www/html) for sucess if any trouble with permissions:

Started by user admin
Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/nautilus-app-deployment
The recommended git tool is: NONE
using credential sarah
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/nautilus-app-deployment/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://80-port-68467552dfc94d3b.labs.kodekloud.com/sarah/web.git # timeout=10
Fetching upstream changes from https://80-port-68467552dfc94d3b.labs.kodekloud.com/sarah/web.git
 > git --version # timeout=10
 > git --version # 'git version 2.25.1'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- https://80-port-68467552dfc94d3b.labs.kodekloud.com/sarah/web.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision e7093a70be2cdd73156e65040740465ca5c62897 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f e7093a70be2cdd73156e65040740465ca5c62897 # timeout=10
Commit message: "Added index.html file"
 > git rev-list --no-walk e7093a70be2cdd73156e65040740465ca5c62897 # timeout=10
SSH: Connecting from host [jenkins.stratos.xfusioncorp.com]
SSH: Connecting with configuration [ststor01] ...
SSH: Disconnecting configuration [ststor01] ...
SSH: Transferred 1 file(s)
Finished: SUCCESS

8. login to gitea and add webhook (repo - settings - Webhooks):
https://8080-port-6bfd717132ba43f5.labs.kodekloud.com/buildByToken/build?job=nautilus-app-deployment&token=KODEKLOUDENGINEER (get this link from jenkins job - build trigger), with method POST, after creating check it (Test Delivery)

9. go to ststor01 and go to /home/sarah/web, make changes with index.html file and push it:
git add index.html
git commit - m "updated"
git push origin master

10. go to jenkins and you will see and check build crated job
