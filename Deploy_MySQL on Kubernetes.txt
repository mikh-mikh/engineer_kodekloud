Deploy MySQL on Kubernetes

A new MySQL server needs to be deployed on Kubernetes cluster. The Nautilus DevOps team was working on to gather the requirements. Recently they were able to finalize the requirements and shared them with the team members to start working on it. Below you can find the details:

1.) Create a PersistentVolume mysql-pv, its capacity should be 250Mi, set other parameters as per your preference.
2.) Create a PersistentVolumeClaim to request this PersistentVolume storage. Name it as mysql-pv-claim and request a 250Mi of storage. Set other parameters as per your preference.
3.) Create a deployment named mysql-deployment, use any mysql image as per your preference. Mount the PersistentVolume at mount path /var/lib/mysql.
4.) Create a NodePort type service named mysql and set nodePort to 30007.
5.) Create a secret named mysql-root-pass having a key pair value, where key is password and its value is YUIidhb667, create another secret named mysql-user-pass having some key pair values, where frist key is username and its value is kodekloud_rin, second key is password and value is Rc5C9EyvbU, create one more secret named mysql-db-url, key name is database and value is kodekloud_db8

6.) Define some Environment variables within the container:
a) name: MYSQL_ROOT_PASSWORD, should pick value from secretKeyRef name: mysql-root-pass and key: password
b) name: MYSQL_DATABASE, should pick value from secretKeyRef name: mysql-db-url and key: database
c) name: MYSQL_USER, should pick value from secretKeyRef name: mysql-user-pass key key: username
d) name: MYSQL_PASSWORD, should pick value from secretKeyRef name: mysql-user-pass and key: password


apiVersion: v1
kind: PersistentVolume 
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: standard       
  capacity:
    storage: 250Mi
  accessModes: 
    - ReadWriteOnce 
  hostPath:                       
    path: "/mnt/data"
  #persistentVolumeReclaimPolicy: Retain   
---    
apiVersion: v1 
kind: PersistentVolumeClaim
metadata:                          
  name: mysql-pv-claim
  labels:
    app: mysql-app 
spec:                              
  storageClassName: standard       
  accessModes: 
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Mi
---
apiVersion: v1                    
kind: Service                      
metadata:
  name: mysql         
  labels:       
    app: mysql-app
spec:
  type: NodePort
  ports:
    - targetPort: 3306
      port: 3306
      nodePort: 30007
  selector:        
    app: mysql_app
---
apiVersion: apps/v1 
kind: Deployment                    
metadata:
  name: mysql-deployment           
  labels:                         
    app: mysql-app   
spec:
  selector:
    matchLabels:             
      app: mysql-app
  strategy:
    type: Recreate 
  template:         
    metadata:
      labels:        
        app: mysql-app
    spec:            
      containers:
      - image: mysql:5.6 
        name: mysql
        env:              
        - name: MYSQL_ROOT_PASSWORD 
          valueFrom:     
            secretKeyRef:
              name: mysql-root-pass 
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-db-url 
              key: database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass 
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass 
              key: password
        ports:
        - containerPort: 3306              
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage  
          mountPath: /var/lib/mysql
      volumes:                        
        - name: mysql-persistent-storage
          persistentVolumeClaim: 
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-pass
type: Opaque
stringData:
  password: "YUIidhb667"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-user-pass
type: Opaque
stringData:
  username: "kodekloud_rin"
  password: "Rc5C9EyvbU"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-url
type: Opaque
stringData:
  database: "kodekloud_db8"